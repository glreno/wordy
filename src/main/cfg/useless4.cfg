# Copyright (c) 2025 Gerald Reno, Jr.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0

FEATURES {
    STARTADDRESS: default = $0400;
}
SYMBOLS {
    __CARTSIZE__:        type = weak,   value = $2000; # 8K main bank at $A000
    __STACKSIZE__:       type = weak,   value = $0800; # 2K stack
    __STARTADDRESS__:    type = export, value = %S;
    __RESERVED_MEMORY__: type = export, value = $0000; # This ends at RAMTOP minus 3E0 for a gr.0 screen
    __CARTFLAGS__:       type = weak,   value = $04;   # see documentation for other possible values
}
MEMORY {
    # XEGS 32KB Bank switching: Poke the ID number into $D500 to swap the bank in to $8000-$9FFF
    # The main bank appears at $A000, and also in $8000 as Bank 3
    ZP:     file = "", define = yes, start = $0082,                size = $007E;
    # MAIN memory ends at RAMTOP minus 3E0, so 7C20 on a 48K machine with a 16K cart in it.
    MAIN:   file = "", define = yes, start = %S,                   size = $1C20 - __STACKSIZE__ - __RESERVED_MEMORY__ - %S;
    CBANK0: file = %O,               start = $8000, size = $2000, fill = yes, fillval = $80; # Bank 0
    CBANK1: file = %O,               start = $8000, size = $2000, fill = yes, fillval = $81; # Bank 1
    CBANK2: file = %O,               start = $8000, size = $2000, fill = yes, fillval = $82; # Bank 2
    ROM:    file = %O, define = yes, start = $C000 - __CARTSIZE__, size = __CARTSIZE__ - 6, fill = yes, fillval = $83;
    CARTID: file = %O,               start = $BFFA,                size = $0006;
}
SEGMENTS {
    ZEROPAGE: load = ZP,              type = zp,                optional = yes;
    EXTZP:    load = ZP,              type = zp,                optional = yes;
    COPYRIGHT:    load = CBANK0, type = ro, define = yes, optional = yes;
    CARTBANK0:    load = CBANK0, type = ro, define = yes, optional = yes;
    CARTBANK1:    load = CBANK1, type = ro, define = yes, optional = yes;
    CARTBANK2:    load = CBANK2, type = ro, define = yes, optional = yes;
    COPYRIGHT_ROM:    load = ROM, type = ro, define = yes, optional = yes;
    STARTUP:  load = ROM,             type = ro,  define = yes, optional = yes;
    LOWBSS:   load = MAIN,            type = bss,               optional = yes;  # not zero initialized
    LOWCODE:  load = ROM,             type = ro,  define = yes, optional = yes;
    ONCE:     load = ROM,             type = ro,                optional = yes;
    CODE:     load = ROM,             type = ro,  define = yes;
    RODATA:   load = ROM,             type = ro,                optional = yes;
    DATA:     load = ROM, run = MAIN, type = rw,  define = yes, optional = yes;
    INIT:     load = MAIN,            type = bss,               optional = yes;
    BSS:      load = MAIN,            type = bss, define = yes, optional = yes;
    CARTHDR:  load = CARTID,          type = ro;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
